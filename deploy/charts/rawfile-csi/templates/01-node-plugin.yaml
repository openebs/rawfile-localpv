apiVersion: v1
kind: Service
metadata:
  name: {{ include "rawfile-csi.fullname" . }}-node
  labels:
    {{- include "rawfile-csi.labels" . | nindent 4 }}
    component: node
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 9100
      targetPort: metrics
      protocol: TCP
  selector:
    {{- include "rawfile-csi.selectorLabels" . | nindent 4 }}
    component: node
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "rawfile-csi.fullname" . }}-node
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: "100%"
  selector:
    matchLabels: &selectorLabels
      {{- include "rawfile-csi.selectorLabels" . | nindent 6 }}
      component: node
  template:
    metadata:
      labels: *selectorLabels
    spec:
      serviceAccount: {{ include "rawfile-csi.fullname" . }}-driver
      priorityClassName: {{ .Values.node.priorityClassName }}
      tolerations:
        {{- .Values.node.tolerations | toYaml | nindent 8 }}
      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/rawfile-csi
            type: DirectoryOrCreate
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet
            type: DirectoryOrCreate
        - name: data-dir
          hostPath:
            path: {{ .Values.node.dataDirPath }}
            type: DirectoryOrCreate
      containers:
        - name: csi-driver
          image: "{{ include "rawfile-csi.node-image" . }}"
          imagePullPolicy: "{{ include "rawfile-csi.node-pull-policy" . }}"
          securityContext:
            privileged: true
          env:
            - name: PROVISIONER_NAME
              value: "{{ .Values.provisionerName }}"
            - name: NODE_DATADIR
              value: "{{ .Values.node.dataDirPath }}"
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: IMAGE_REPOSITORY
              value: "{{ include "rawfile-csi.node-image-repository" . }}"
          {{- if regexMatch "^.*-ci$" (include "rawfile-csi.node-image-tag" .) }}
            - name: IMAGE_TAG
              value: "{{ include "rawfile-csi.node-image-tag" . }}"
          {{- end }}
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          ports:
            - name: metrics
              containerPort: 9100
            - name: csi-probe
              containerPort: 9808
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: data-dir
              mountPath: /data
          resources:
            {{- include "rawfile-csi.controller-resources" . | nindent 12 }}
        - name: node-driver-registrar
          image: {{ printf "%s:%s" .Values.node.driverRegistrar.image.repository .Values.node.driverRegistrar.image.tag }}
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
            - --health-port=9809
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/rawfile-csi/csi.sock
          ports:
            - containerPort: 9809
              name: healthz
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 5
            timeoutSeconds: 5
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          resources:
            limits:
              cpu: 500m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 100Mi
        - name: external-provisioner
          image: {{ printf "%s:%s" .Values.node.externalProvisioner.image.repository .Values.node.externalProvisioner.image.tag }}
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(ADDRESS)"
            - "--feature-gates=Topology=true"
            - "--strict-topology"
            - "--immediate-topology=false"
            - "--timeout=120s"
            - "--enable-capacity=true"
            - "--capacity-ownerref-level=1" # DaemonSet
            - "--node-deployment=true"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: external-snapshotter
          image: {{ printf "%s:%s" .Values.node.externalSnapshotter.image.repository .Values.node.externalSnapshotter.image.tag }}
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(ADDRESS)"
            - "--node-deployment=true"
            - "--extra-create-metadata=true"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
