apiVersion: v1
kind: Service
metadata:
  name: {{ include "rawfile-csi.fullname" . }}-controller
  labels:
    {{- include "rawfile-csi.labels" . | nindent 4 }}
    component: controller
spec:
  type: ClusterIP
  selector:
    {{- include "rawfile-csi.selectorLabels" . | nindent 4 }}
    component: controller
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "rawfile-csi.fullname" . }}-controller
spec:
  replicas: 1
  serviceName: {{ include "rawfile-csi.fullname" . }}
  selector:
    matchLabels: &selectorLabels
      {{- include "rawfile-csi.selectorLabels" . | nindent 6 }}
      component: controller
  template:
    metadata:
      labels: *selectorLabels
    spec:
      serviceAccount: {{ include "rawfile-csi.fullname" . }}-driver
      priorityClassName: system-cluster-critical
      tolerations:
        {{- .Values.controller.tolerations | toYaml | nindent 8 }}
      volumes:
        - name: socket-dir
          emptyDir: {}
      containers:
        - name: csi-driver
          image: "{{ include "rawfile-csi.controller-image" . }}"
          imagePullPolicy: "{{ include "rawfile-csi.controller-pull-policy" . }}"
          args:
            - csi-driver
            - --disable-metrics
          env:
            - name: PROVISIONER_NAME
              value: "{{ .Values.provisionerName }}"
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: IMAGE_REPOSITORY
              value: "{{ include "rawfile-csi.controller-image-repository" . }}"
          {{- if regexMatch "^.*-ci$" (include "rawfile-csi.controller-image-tag" .) }}
            - name: IMAGE_TAG
              value: "{{ include "rawfile-csi.controller-image-tag" . }}"
          {{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          ports:
            - name: csi-probe
              containerPort: 9808
          resources:
            {{- include "rawfile-csi.controller-resources" . | nindent 12 }}
        - name: external-resizer
          image: {{ printf "%s:%s" .Values.controller.externalResizer.image.repository .Values.controller.externalResizer.image.tag }}
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(ADDRESS)"
            - "--handle-volume-inuse-error=false"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
