apiVersion: v1
kind: Service
metadata:
  name: {{ include "rawfile-csi.fullname" . }}-controller
  labels:
    {{- include "rawfile-csi.labels" . | nindent 4 }}
    component: controller
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-weight": "{{ add (.Values.hookWeight | default 0) 2 }}"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  type: ClusterIP
  selector:
    {{- include "rawfile-csi.selectorLabels" . | nindent 4 }}
    component: controller
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "rawfile-csi.fullname" . }}-controller
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-weight": "{{ add (.Values.hookWeight | default 0) 2 }}"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  replicas: 1
  serviceName: {{ include "rawfile-csi.fullname" . }}
  selector:
    matchLabels: &selectorLabels
      {{- include "rawfile-csi.selectorLabels" . | nindent 6 }}
      component: controller
  template:
    metadata:
      labels: *selectorLabels
    spec:
      serviceAccount: {{ include "rawfile-csi.fullname" . }}-driver
      priorityClassName: system-cluster-critical
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: Equal
          value: "true"
          effect: NoSchedule
      volumes:
        - name: socket-dir
          emptyDir: {}
      containers:
        - name: csi-driver
          image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag }}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          args:
            - csi-driver
            - --disable-metrics
          env:
            - name: PROVISIONER_NAME
              value: "{{ .Values.provisionerName }}"
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: IMAGE_REPOSITORY
              value: "{{ .Values.controller.image.repository }}"
          {{- if regexMatch "^.*-ci$" .Values.controller.image.tag }}
            - name: IMAGE_TAG
              value: "{{ .Values.controller.image.tag }}"
          {{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          ports:
            - name: csi-probe
              containerPort: 9808
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
        - name: external-resizer
          image: k8s.gcr.io/sig-storage/csi-resizer:v1.2.0
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(ADDRESS)"
            - "--handle-volume-inuse-error=false"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
